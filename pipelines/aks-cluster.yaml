---
trigger:
  branches:
    include:
      - main
  paths:
    include:
      - bicep/acr.bicep
      - bicep/**/acr.parameters.json
      - bicep/aks-cluster.bicep
      - bicep/**/aks-cluster.parameters.json
      - bicep/network-security-group.bicep
      - bicep/**/network-security-group.parameters.json
      - bicep/virtual-network.bicep
      - bicep/**/virtual-network.parameters.json
      - pipelines/aks-cluster.yaml

pr:
  branches:
    include:
      - main
  paths:
    include:
      - bicep/acr.bicep
      - bicep/**/acr.parameters.json
      - bicep/aks-cluster.bicep
      - bicep/**/aks-cluster.parameters.json
      - bicep/network-security-group.bicep
      - bicep/**/network-security-group.parameters.json
      - bicep/virtual-network.bicep
      - bicep/**/virtual-network.parameters.json
      - pipelines/aks-cluster.yaml

pool:
  name: DEFRA-COMMON-ubuntu2204-SSV5

variables:
  - group: "${{ parameters.environmentName }}"
  - template: "vars/common.yaml"
  - template: "vars/${{ lower(parameters.environmentName) }}.yaml"
  - name: helmDryRun
    ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/main') }}:
      value: ''
    ${{ else }}:
      value: '--dry-run'

parameters:
  - name: environmentName
    type: string
    default: POC
    values:
      - POC
      - TST
  - name: bicepFiles
    type: stringList
    values:
      - virtual-network
      - network-security-group
      - aks-cluster
      - acr
    default:
      - virtual-network
      - network-security-group
      - aks-cluster
      - acr

stages:
  - stage: Deploy
    jobs:
      - deployment: DeployBicep
        environment:
          name: "${{ parameters.environmentName }}"
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self

                - task: AzureCLI@2
                  name: PrepareResourceGroups
                  condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
                  inputs:
                    azureSubscription: $(serviceConnection)
                    scriptType: bash
                    scriptLocation: inlineScript
                    inlineScript: |
                      az group create \
                        --name $(resourceGroupName) \
                        --location $(location)

                - ${{ each template in parameters.bicepFiles }}:
                  - task: AzureCLI@2
                    displayName: WhatIf_${{ template }}
                    inputs:
                      azureSubscription: $(serviceConnection)
                      scriptType: bash
                      scriptLocation: inlineScript
                      inlineScript: |
                        az deployment group what-if \
                          --name "${{ template }}-$(Build.BuildId)" \
                          --resource-group $(resourceGroupName) \
                          --template-file bicep/${{ template }}.bicep \
                          --parameters @bicep/envs/${{ lower(parameters.environmentName) }}/${{ template }}.parameters.json

                  - task: AzureCLI@2
                    displayName: Deploy_${{ template }}
                    condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
                    inputs:
                      azureSubscription: $(serviceConnection)
                      scriptType: bash
                      scriptLocation: inlineScript
                      inlineScript: |
                        az deployment group create \
                          --name "${{ template }}-$(Build.BuildId)" \
                          --resource-group $(resourceGroupName) \
                          --template-file bicep/${{ template }}.bicep \
                          --parameters @bicep/envs/${{ lower(parameters.environmentName) }}/${{ template }}.parameters.json

      - deployment: DeployHelm
        environment:
          name: "${{ parameters.environmentName }}"
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self

                - task: HelmDeploy@0
                  displayName: "HelmInstall_ingress-nginx"
                  inputs:
                    connectionType: Azure Resource Manager
                    azureSubscription: $(serviceConnection)
                    azureResourceGroup: $(resourceGroupName)
                    kubernetesCluster: $(kubernetesCluster)
                    namespace: ingress-nginx
                    command: upgrade
                    chartName: ingress-nginx
                    chartVersion: 4.13.3
                    releaseName: ingress-nginx
                    install: true
                    useClusterAdmin: true
                    arguments: >-
                      --repo https://kubernetes.github.io/ingress-nginx
                      -f helm-charts/ingress-nginx-values.yaml
                      --create-namespace
                      --set global.image.registry=$(acrLoginServer)
                      $(helmDryRun)

# vim: set ts=2 sts=2 sw=2 et:
