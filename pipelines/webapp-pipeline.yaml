trigger:
  branches:
    include:
      - "*"
  paths:
    include:
      - helm-charts/webapp/

pool:
  name: 'DEFRA-COMMON-ubuntu2204-SSV5'

variables:
  azureSubscription: 'ADO-DefraGovUK-AZR-POC_IMP'
  acrName: 'pocimpinfac1401'
  helmChartPath: './helm-charts/webapp'
  helmChartName: 'webapp'

stages:
  - stage: Build
    jobs:
      - job: ExtractVersionFromChart
        steps:
          - script: |
              version=$(yq '.version' Chart.yaml)
              echo "##vso[task.setvariable variable=helmChartVersion;isOutput=true]$version"
            workingDirectory: $(helmChartPath)
            name: ComputeVersion
        displayName: Compute version
      - job: BuildFeatureBranchArtifactWebApp
        condition: false #ne(variables['Build.SourceBranch'], 'refs/heads/main')
        dependsOn: ExtractVersionFromChart
        variables:
          helmChartVersion: $[ dependencies.ExtractVersionFromChart.outputs['ComputeVersion.helmChartVersion'] ]
        steps:
          - task: AzureCLI@2
            inputs:
              azureSubscription: $(azureSubscription)
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                echo "Logging in to ACR."
                az acr login --name $(acrName)
                  
                echo "Generating Version Label"  
                VERSION="$(helmChartVersion)+build.$(Build.BuildNumber)"
                echo "Version Label: ${VERSION}"
                
                echo "Packaging Helm Chart."
                helm package $(helmChartPath) --version ${VERSION}
                
                echo "Pushing Helm chart to ACR."
                helm push $(helmChartName)-${VERSION}.tgz oci://$(acrName).azurecr.io/helm/v1/repo
      - job: BuildMainBranchArtifactWebApp
        condition: ne(variables['Build.SourceBranch'], 'refs/heads/main')
        dependsOn: ExtractVersionFromChart
        variables:
          helmChartVersion: $[ dependencies.ExtractVersionFromChart.outputs['ComputeVersion.helmChartVersion'] ]
          gitUserName: 'IPAFFS CI Bot'
          gitUserEmail: 'ipaffs-ci-bot@defra.gov.uk'
          #gitUsername: $('GitHub Enterprise (DEFRA)'.Username)
          #gitToken: $('GitHub Enterprise (DEFRA)'.Password)
        steps:
          - checkout: self
            persistCredentials: true
            clean: true
          - task: AzureCLI@2
            inputs:
              azureSubscription: $(azureSubscription)
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                git config -l
                git remote -v
                get branch -a
                git status

#                echo Bumping Chart Version
#                CURRENT_VERSION=$(helmChartVersion)
#                NEW_VERSION="${CURRENT_VERSION%.*}.$((${CURRENT_VERSION##*.} + 1))"
#                yq -i ".version = \"${NEW_VERSION}\"" $(helmChartPath)/Chart.yaml
#
#                echo Committing Chart
#                #git remote add origin https://$(gitUsername):$(gitToken)@github.com/DEFRA/ipaffs-infra
#
#                git config user.name "$(gitUserName)"
#                git config user.email "$(gitUserEmail)"
##                git fetch origin
#                git checkout main
#                git add $(helmChartPath)/Chart.yaml
#                git diff --cached
#                git commit -m "[skip ci] build(deps): bump Chart version from $(helmChartVersion) to ${NEW_VERSION}"
#                git status
#                echo about to push
#                git push
#

