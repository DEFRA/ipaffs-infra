steps:
  - task: AzureCLI@2
    displayName: WhatIf - Resource Group
    inputs:
      azureSubscription: $(serviceConnection)
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        az deployment sub what-if \
          --name "ResourceGroup-$(Build.BuildId)" \
          --location $(location) \
          --template-file bicep/resource-group.bicep \
          --parameters @bicep/envs/${{ lower(parameters.environmentName) }}/resource-group.parameters.json

  - task: AzureCLI@2
    displayName: Deploy - ResourceGroup
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
    inputs:
      azureSubscription: $(serviceConnection)
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        az deployment sub create \
          --name "ResourceGroup-$(Build.BuildId)" \
          --location $(location) \
          --template-file bicep/resource-group.bicep \
          --parameters @bicep/envs/${{ lower(parameters.environmentName) }}/resource-group.parameters.json

  - task: AzureCLI@2
    displayName: WhatIf - Main
    inputs:
      azureSubscription: $(serviceConnection)
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        az deployment group what-if \
          --name "Infrastructure-$(Build.BuildId)" \
          --resource-group $(resourceGroupName) \
          --template-file bicep/main.bicep \
          --parameters @bicep/envs/${{ lower(parameters.environmentName) }}/main.parameters.json \
          --parameters tenantId="$(tenantId)"

  - task: AzureCLI@2
    displayName: Deploy - Main
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
    inputs:
      azureSubscription: $(serviceConnection)
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        az deployment group create \
          --name "Infrastructure-$(Build.BuildId)" \
          --resource-group $(resourceGroupName) \
          --template-file bicep/main.bicep \
          --parameters @bicep/envs/${{ lower(parameters.environmentName) }}/main.parameters.json \
          --parameters tenantId="$(tenantId)"

# TODO: Enable when RITM1311452 is completed
#  - task: AzureCLI@2
#    displayName: StoreACRLoginServer
#    condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
#    inputs:
#      azureSubscription: $(serviceConnection)
#      scriptType: bash
#      scriptLocation: inlineScript
#      inlineScript: |
#        # Get the ID of the library variable group
#        groupId="$(az pipelines variable-group list \
#          --org '$(System.CollectionUri)' \
#          --project '$(System.TeamProject)' \
#          --group-name '${{ parameters.environmentName }}' \
#          --query '[0].name' \
#          -o tsv)"
#
#        deploymentOutput() {
#          az deployment group show \
#            --name "Infrastructure-$(Build.BuildId)" \
#            --resource-group $(resourceGroupName) \
#            --query properties.outputs.${1}.value \
#            -o tsv
#        }
#
#        updateGroupVariable() {
#          az pipelines variable-group variable update \
#            --org '$(System.CollectionUri)' \
#            --project '$(System.TeamProject)' \
#            --id "${groupId}" \
#            --name "${1}" \
#            --value "${2}"
#        }
#
#        # Update library group variables
#        updateGroupVariable acrLoginServer "$(deploymentOutput acrLoginServer)"
#        updateGroupVariable azureServiceOperatorClientId "$(deploymentOutput azureServiceOperatorClientId)"
