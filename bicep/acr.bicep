param name string
param location string = resourceGroup().location
param sku string = 'Premium' // Options: Basic, Standard, Premium
param adminEnabled bool = true
param subnetIds array
param acrPullRoleId string = '7f951dda-4ed3-4680-a7ca-43fe172d538d'
param aksManagedIdentityName string = 'POCIMPINFAK1401-agentpool'

resource acr 'Microsoft.ContainerRegistry/registries@2025-05-01-preview' = {
  name: name
  location: location
  sku: {
    name: sku
  }
  properties: {
    adminUserEnabled: adminEnabled
    autoGeneratedDomainNameLabelScope: 'Unsecure'
  }
}

resource acrPe 'Microsoft.Network/privateEndpoints@2023-05-01' = [for subnetId in subnetIds: {
  name: '${name}-${last(split(subnetId, '/'))}'
  location: location
  properties: {
    subnet: {
      id: subnetId
    }
    privateLinkServiceConnections: [
      {
        name: 'acr-connection'
        properties: {
          privateLinkServiceId: acr.id
          groupIds: [
            'registry'
          ]
        }
      }
    ]
  }
}]

resource aksManagedIdentity 'Microsoft.ManagedIdentity/identities@2024-11-30' existing = {
  name: aksManagedIdentityName
}

resource acrAksRoleAssignment 'Microsoft.Authorization/roleAssignments@2022-04-01' = {
  name: guid(acr.id, aksManagedIdentityName, acrPullRoleId)
  scope: acr
  properties: {
    principalId: aksManagedIdentity.properties.principalId
    roleDefinitionId: acrPullRoleId
  }
}

output acrName string = acr.name
output acrLoginServer string = acr.properties.loginServer
output acrResourceId string = acr.id
